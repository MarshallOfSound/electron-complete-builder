{"version":3,"file":"build.js","sourceRoot":"","sources":["../src/build.ts"],"names":[],"mappings":"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","sourcesContent":["#! /usr/bin/env node\n\nimport * as fs from \"fs\"\nimport * as path from \"path\"\nimport { DEFAULT_APP_DIR_NAME, reportResult, packageJson, commonArgs, readPackageJson, installDependencies } from \"./util\"\n\nconst packager = require(\"electron-packager\")\n\nlet isTwoPackageJsonProjectLayoutUsed = true\n\ninterface AppArgs {\n  arch: string\n  build: boolean\n  sign?: string\n  platform: string\n  appDir?: string\n}\n\nconst args: AppArgs = require(\"command-line-args\")(commonArgs.concat(\n  {name: \"arch\", type: String, defaultValue: \"all\"},\n  {name: \"build\", type: Boolean, defaultValue: false},\n  {name: \"sign\", type: String},\n  {name: \"platform\", type: String, defaultValue: process.platform}\n)).parse()\n\nconst appDir = computeAppDirectory()\nconst appPackageJsonFile = path.join(appDir, \"package.json\")\nconst appPackageJson = readPackageJson(appPackageJsonFile)\ncheckMetadata()\n\nconst version = appPackageJson.version\n\nconst arch = args.platform === \"darwin\" ? [\"x64\"] : (args.arch == null || args.arch === \"all\" ? [\"ia32\", \"x64\"] : [args.arch])\nlet currentArchIndex = 0\n\nconst distDir = path.join(process.cwd(), \"dist\")\nconst outDir = computeOutDirectory()\n\nconsole.log(\"Removing %s\", outDir)\nrequire(\"rimraf\").sync(outDir)\n\npack()\n\nfunction pack() {\n  const currentArch = arch[currentArchIndex]\n  if (isTwoPackageJsonProjectLayoutUsed) {\n    installDependencies(currentArch)\n  }\n  else {\n    console.log(\"Skipping app dependencies installation because dev and app dependencies are not separated\")\n  }\n\n  packager(Object.assign(appPackageJson.build || {}, {\n    dir: appDir,\n    out: args.platform === \"win32\" ? path.join(distDir, \"win\") : distDir,\n    name: appPackageJson.name,\n    platform: args.platform,\n    arch: currentArch,\n    version: packageJson.devDependencies[\"electron-prebuilt\"].substring(1),\n    icon: path.join(process.cwd(), \"build\", \"icon\"),\n    asar: true,\n    \"app-version\": version,\n    \"build-version\": version,\n    sign: args.sign,\n    \"version-string\": {\n      CompanyName: appPackageJson.authors,\n      FileDescription: appPackageJson.description,\n      FileVersion: version,\n      ProductVersion: version,\n      ProductName: appPackageJson.name,\n      InternalName: appPackageJson.name,\n    }\n  }), function (error: any) {\n    if (error != null) {\n      throw new Error(error)\n    }\n\n    currentArchIndex++\n    if (args.build) {\n      build(currentArch, currentArchIndex < arch.length ? function () {\n        pack()\n      } : null)\n    }\n    else if (currentArchIndex < arch.length) {\n      pack()\n    }\n  })\n}\n\nfunction build(arch: string, doneHandler: () => void) {\n  const appName = appPackageJson.name\n  const appPath = path.join(outDir, appName + (args.platform === \"darwin\" ? \".app\" : \"-win32-\" + arch))\n\n  const callback = function(error: any) {\n    if (error != null) {\n      //noinspection JSClosureCompilerSyntax\n      throw new Error(error)\n    }\n\n    if (args.platform === \"darwin\") {\n      fs.renameSync(path.join(outDir, appName + \".dmg\"), path.join(outDir, appName + \"-\" + version + \".dmg\"))\n      const spawnSync = require(\"child_process\").spawnSync\n      reportResult(spawnSync(\"zip\", [\"-ryX\", `${outDir}/${appName}-${version}-mac.zip`, appName + \".app\"], {\n        cwd: outDir,\n        stdio: \"inherit\",\n      }))\n    }\n    else {\n      fs.renameSync(path.join(outDir, arch, appName + \"Setup.exe\"), path.join(outDir, appName + \"Setup-\" + version + ((arch === \"x64\") ? \"-x64\" : \"\") + \".exe\"))\n    }\n\n    if (doneHandler != null) {\n      doneHandler()\n    }\n  }\n\n  if (args.platform === \"darwin\") {\n    require(\"electron-builder\").init().build({\n      \"appPath\": appPath,\n      \"platform\": args.platform === \"darwin\" ? \"osx\" : (args.platform == \"win32\" ? \"win\" : args.platform),\n      \"out\": outDir,\n      \"config\": path.join(process.cwd(), \"build\", \"packager.json\"),\n    }, callback)\n  }\n  else {\n    require('electron-installer-squirrel-windows')({\n      name: appPackageJson.name,\n      path: appPath,\n      product_name: appPackageJson.name,\n      out: path.join(outDir, arch),\n      version: version,\n      description: appPackageJson.description,\n      authors: appPackageJson.author,\n      setup_icon: path.join(process.cwd(), \"build\", \"icon.ico\"),\n    }, callback)\n  }\n}\n\n// Auto-detect app/ (two package.json project layout (development and app)) or fallback to use working directory if not explicitly specified\nfunction computeAppDirectory() {\n  let customAppPath = args.appDir\n  let required = true\n  if (customAppPath == null) {\n    customAppPath = DEFAULT_APP_DIR_NAME\n    required = false\n  }\n\n  let absoluteAppPath = path.normalize(path.join(process.cwd(), customAppPath))\n  try {\n    fs.accessSync(absoluteAppPath)\n  }\n  catch (e) {\n    if (required) {\n      throw new Error(customAppPath + \" doesn't exists, \" + e.message)\n    }\n    else {\n      isTwoPackageJsonProjectLayoutUsed = false\n      return process.cwd()\n    }\n  }\n  return absoluteAppPath\n}\n\nfunction computeOutDirectory() {\n  let relativeDirectory: string\n  if (args.platform === \"darwin\") {\n    relativeDirectory = appPackageJson.name + \"-darwin-x64\"\n  }\n  else {\n    relativeDirectory = \"win\"\n  }\n  return path.join(distDir, relativeDirectory)\n}\n\nfunction checkMetadata() {\n  function error(missedFieldName: string) {\n    throw new Error(\"Please specify '\" + missedFieldName + \"' in the application package.json ('\" + appPackageJsonFile + \"')\")\n  }\n\n  if (appPackageJson.name == null) {\n    error(\"name\")\n  }\n  else if (appPackageJson.description == null) {\n    error(\"description\")\n  }\n  else if (appPackageJson.version == null) {\n    error(\"version\")\n  }\n  else if (appPackageJson.build == null) {\n    throw new Error(\"Please specify 'build' configuration in the application package.json ('\" + appPackageJsonFile + \"'), at least\\n\\n\" +\n        '\\t\"build\": {\\n' +\n        '\\t  \"app-bundle-id\": \"your.id\",\\n' +\n        '\\t  \"app-category-type\": \"your.app.category.type\"\\n'\n        + '\\t}' + \"\\n\\n is required.\\n\")\n  }\n  else if (appPackageJson.author == null) {\n    error(\"author\")\n  }\n}"]}